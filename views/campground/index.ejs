      
<% layout('campground/layout/template') -%>
    <div>
        <div id="map" style="width: 100%; height: 50vh;" class="mt-2"></div>

        <header class="row justify-content-between p-2">

            <h1 class="col-3">all our product</h1>

        </header>

        <% if(all){ %>

            <% for(let i=0;i<all.length;i++){ %>

                <% if(i==all.length-1){ %>
                    <div class="card " style="border-bottom: 0;">
                        <% }else{ %>

                            <div class="card mb-3">
                                <% } %>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <img src="<%= all[i].image[0].url %>" alt=""
                                                class="img-fluid rounded-start">
                                        </div>
                                        <div class="col-md-8 ">
                                            <div class="card-body">
                                                <h1 class="card-title">
                                                    <%=all[i].title%>
                                                </h1>
                                                <p class="card-text">
                                                    <%= all[i].description%>
                                                </p>
                                                <a href="/campground/<%=all[i]._id%>" class="btn btn-primary ">visit
                                                    <%=all[i].location%>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                            </div>

                            <% if(i==all.length-1){ %>
                                <div class="card align-items-end mb-3 " style="border-top: 0;">
                                    <a href="/campground/new" class="btn btn-primary px-5 col-3">Add</a>
                                </div>
                                <% } %>
                                    <%} %>

                                        <% } %>
                    </div>
                    <script>
                        let myVar = ` <%- JSON.stringify(data) %> `;

                    </script>
                    <script>


                        window.addEventListener("load", () => {

                            mapboxgl.accessToken = 'pk.eyJ1IjoiYWRuYW4xMjNrbCIsImEiOiJja284anRicWQybjR0MndtdjYxdWUzOGprIn0.bj2K27XkIcxNs-Pmkl2SHw';
                            const map = new mapboxgl.Map({
                                container: 'map',
                                style: 'mapbox://styles/mapbox/dark-v10',
                                center: [-94.16324039999999, 45.5579451],
                                zoom: 3
                            });


                            map.on('load', () => {
                                // Add a new source from our GeoJSON data and
                                // set the 'cluster' option to true. GL-JS will
                                // add the point_count property to your source data.
                                map.addSource('campgrounds', {
                                    type: 'geojson',
                                    // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes
                                    // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.
                                    data: JSON.parse(myVar)
                                    , cluster: true,
                                    clusterMaxZoom: 14, // Max zoom to cluster points on
                                    clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)
                                });
                                map.addControl(new mapboxgl.NavigationControl())
                                map.addLayer({
                                    id: 'clusters',
                                    type: 'circle',
                                    source: 'campgrounds',
                                    filter: ['has', 'point_count'],
                                    paint: {
                                        // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)
                                        // with three steps to implement three types of circles:
                                        //   * Blue, 20px circles when point count is less than 100
                                        //   * Yellow, 30px circles when point count is between 100 and 750
                                        //   * Pink, 40px circles when point count is greater than or equal to 750
                                        'circle-color': [
                                            'step',
                                            ['get', 'point_count'],
                                            '#51bbd6',
                                            100,
                                            '#f1f075',
                                            750,
                                            '#f28cb1'
                                        ],
                                        'circle-radius': [
                                            'step',
                                            ['get', 'point_count'],
                                            20,
                                            100,
                                            30,
                                            750,
                                            40
                                        ]
                                    }
                                });

                                map.addLayer({
                                    id: 'cluster-count',
                                    type: 'symbol',
                                    source: 'campgrounds',
                                    filter: ['has', 'point_count'],
                                    layout: {
                                        'text-field': '{point_count_abbreviated}',
                                        'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                                        'text-size': 12
                                    }
                                });

                                map.addLayer({
                                    id: 'unclustered-point',
                                    type: 'circle',
                                    source: 'campgrounds',
                                    filter: ['!', ['has', 'point_count']],
                                    paint: {
                                        'circle-color': '#11b4da',
                                        'circle-radius': 10,
                                        'circle-stroke-width': 1,
                                        'circle-stroke-color': '#fff'
                                    }
                                });

                                // inspect a cluster on click
                                map.on('click', 'clusters', (e) => {
                                    const features = map.queryRenderedFeatures(e.point, {
                                        layers: ['clusters']
                                    });

                                    const clusterId = features[0].properties.cluster_id;
                                    map.getSource('campgrounds').getClusterExpansionZoom(
                                        clusterId,
                                        (err, zoom) => {
                                            if (err) return;

                                            map.easeTo({
                                                center: features[0].geometry.coordinates,
                                                zoom: zoom
                                            });
                                        }
                                    );
                                });

                                // When a click event occurs on a feature in
                                // the unclustered-point layer, open a popup at
                                // the location of the feature, with
                                // description HTML from its properties.
                                map.on('click', 'unclustered-point', (e) => {

                                    const coordinates = e.lngLat;

                                    new mapboxgl.Popup()
                                        .setLngLat(coordinates)
                                        .setHTML(
                                            `<a href="/campground/${e.features[0].properties.id}" ><h6>${e.features[0].properties.title}</h6></a>`
                                            + `<p>${e.features[0].properties.body}</p>`
                                        )
                                        .addTo(map);
                                });

                                map.on('mouseenter', 'clusters', () => {
                                    map.getCanvas().style.cursor = 'pointer';
                                });
                                map.on('mouseleave', 'clusters', () => {
                                    map.getCanvas().style.cursor = '';
                                });
                            });
                        })
                    </script>